{"version":3,"sources":["webpack:///./src/api/applications.js?9a7a","webpack:///./src/components/Applications/ListOfApplicationsPage/TableWithApplications/index.js?24e8","webpack:///./src/components/Applications/ListOfApplicationsPage/index.js?6185","webpack:///./src/config.js?4264","webpack:///./src/redux/applications/index.js?8731","webpack:///./src/redux/sagas/index.js?a074","webpack:///./src/redux/store/index.js?ee0a"],"names":["getApplicationsFromServer","axios","get","backendPaths","applications","base","createApplication","post","values","avatarColumnStyle","marginRight","display","columns","title","dataIndex","key","render","id","client","firstname","lastname","stocks","map","stock","TableWithApplications","record","props","propTypes","PropTypes","array","isRequired","ListOfApplicationsPage","activeCreateMode","hideCreateMode","createApplicationAction","clients","showCreateMode","getApplicationsAction","func","bool","getClientsAction","getStocksAction","compose","connect","getApplicationsWithFullDataSelector","state","getClientsSelector","getStocksSelector","withStateHandlers","lifecycle","componentDidMount","api","module","exports","frontendPaths","getApplicationsSaga","createApplicationSaga","defaultState","call","result","put","getApplicationsSuccessAction","action","payload","createApplicationSuccessAction","createAction","newApplication","getApplicationsSelector","applicationsReducer","application","getClientByIdSelector","clientId","stockIds","getStockById","stockId","handleActions","data","actions","rootSaga","takeEvery","takeLatest","reducers","combineReducers","menuReducer","stocksReducer","clientsReducer","citiesReducer","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run"],"mappings":"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","file":"4.6c5efe8cafa004a10ecc.hot-update.js","sourcesContent":["// Import libraries\nimport axios from \"axios\";\n\n// Import config\nimport { backendPaths } from \"../config\";\n\nexport const getApplicationsFromServer = () => axios.get(backendPaths.applications.base);\n\nexport const createApplication = values => axios.post(backendPaths.applications.base, values);\n\n\n// WEBPACK FOOTER //\n// ./src/api/applications.js","// Import libraries\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Table, Avatar } from \"antd\";\n\n// Import components\nimport ElementWrapper from \"../../../Common/ElementWrapper\";\n\nconst avatarColumnStyle = {\n  marginRight: \".5em\",\n  display: \"inline-block\"\n};\n\nconst columns = [\n  {\n    title: \"ID заявки\",\n    dataIndex: \"id\",\n    key: \"id\",\n    render: id => (\n      <div>{id}</div>\n    )\n  },\n  {\n    title: \"Клиент\",\n    dataIndex: \"client\",\n    key: \"client\",\n    render: client =>\n      client ? <div>{`${client.firstname} ${client.lastname}`}</div> : null\n  },\n  {\n    title: \"Акции\",\n    dataIndex: \"stocks\",\n    key: \"stocks\",\n    render: stocks =>\n      stocks.map(stock => (stock ? <div>{stock.title}</div> : null))\n  }\n];\n\nconst TableWithApplications = props => (\n  <ElementWrapper>\n    <Table\n      rowKey={record => record.id}\n      dataSource={props.applications}\n      columns={columns}\n    />\n  </ElementWrapper>\n);\n\nTableWithApplications.propTypes = {\n  applications: PropTypes.array.isRequired\n};\n\nexport default TableWithApplications;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/Applications/ListOfApplicationsPage/TableWithApplications/index.js","// Import libraries\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"antd\";\nimport { compose, lifecycle, withStateHandlers } from \"recompose\";\n\n// Import selectors and actions\nimport {\n  getApplicationsWithFullDataSelector,\n  getApplicationsAction,\n  createApplicationAction\n} from \"../../../redux/applications\";\nimport { getClientsAction, getClientsSelector } from \"../../../redux/clients\";\nimport { getStocksAction, getStocksSelector } from \"../../../redux/stocks\";\n\n// Import components\nimport HeaderWithActions from \"../../Layout/MainContent/HeaderWithActions\";\nimport TableWithApplications from \"./TableWithApplications\";\nimport FormOfCreateApplication from \"./FormOfCreateApplication\";\n\nconst ListOfApplicationsPage = props =>\n  props.activeCreateMode ? (\n    <div>\n      <HeaderWithActions\n        title=\"Создание заявки\"\n        actions={[\n          <Button key=\"add\" type=\"primary\" onClick={props.hideCreateMode}>\n            Перейти к списку\n          </Button>\n        ]}\n      />\n      <FormOfCreateApplication\n        createApplicationAction={props.createApplicationAction}\n        clients={props.clients}\n        stocks={props.stocks}\n      />\n    </div>\n  ) : (\n    <div>\n      <HeaderWithActions\n        title=\"Заявки\"\n        actions={[\n          <Button key=\"add\" type=\"primary\" onClick={props.showCreateMode}>\n            Создать заявку\n          </Button>\n        ]}\n      />\n      <TableWithApplications applications={props.applications} />\n    </div>\n  );\n\nListOfApplicationsPage.propTypes = {\n  applications: PropTypes.array.isRequired,\n  getApplicationsAction: PropTypes.func.isRequired,\n  activeCreateMode: PropTypes.bool.isRequired,\n  showCreateMode: PropTypes.func.isRequired,\n  hideCreateMode: PropTypes.func.isRequired,\n  createApplicationAction: PropTypes.func.isRequired,\n  getClientsAction: PropTypes.func.isRequired,\n  clients: PropTypes.array.isRequired,\n  getStocksAction: PropTypes.func.isRequired,\n  stocks: PropTypes.array.isRequired\n};\n\nexport default compose(\n  connect(\n    state => ({\n      applications: getApplicationsWithFullDataSelector(state),\n      clients: getClientsSelector(state),\n      stocks: getStocksSelector(state)\n    }),\n    {\n      getApplicationsAction,\n      createApplicationAction,\n      getClientsAction,\n      getStocksAction\n    }\n  ),\n  withStateHandlers(\n    {\n      activeCreateMode: false\n    },\n    {\n      showCreateMode: () => () => ({ activeCreateMode: true }),\n      hideCreateMode: () => () => ({ activeCreateMode: false })\n    }\n  ),\n  lifecycle({\n    componentDidMount() {\n      this.props.getApplicationsAction();\n      this.props.getClientsAction();\n      this.props.getStocksAction();\n    }\n  })\n)(ListOfApplicationsPage);\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/Applications/ListOfApplicationsPage/index.js","const api = \"/api\";\n\nmodule.exports = {\n  frontendPaths: {\n\n  },\n  backendPaths: {\n    stocks: {\n      base: `${api}/stocks`\n    },\n    clients: {\n      base: `${api}/clients`\n    },\n    applications: {\n      base: `${api}/applications`\n    }\n  }\n};\n\n\n// WEBPACK FOOTER //\n// ./src/config.js","// Import libraries\nimport { handleActions, createAction } from \"redux-actions\";\nimport { call, put } from \"redux-saga/effects\";\nimport { createSelector } from \"reselect\";\n\n// Import selectors\nimport { getStockById } from \"../stocks\";\nimport { getClientByIdSelector } from \"../clients\";\n\n// Import api\nimport api from \"../../api\";\n\nconst defaultState = [];\n\n// Export sagas\nexport function* getApplicationsSaga() {\n  const result = yield call(api.applications.getApplicationsFromServer);\n\n  yield put(getApplicationsSuccessAction(result));\n}\n\nexport function* createApplicationSaga(action) {\n  const result = yield call(api.applications.createApplication, action.payload);\n\n  yield put(createApplicationSuccessAction(result));\n}\n\n// Export actions\nexport const getApplicationsAction = createAction(\"GET_APPLICATIONS\");\nexport const getApplicationsSuccessAction = createAction(\n  \"GET_APPLICATIONS_SUCCESS\",\n  result => result\n);\n\nexport const createApplicationAction = createAction(\n  \"CREATE_APPLICATION\",\n  values => values\n);\nexport const createApplicationSuccessAction = createAction(\n  \"CREATE_APPLICATION_SUCCESS\",\n  newApplication => newApplication\n);\n\n// Export selectors\nexport const getApplicationsSelector = state => state.applicationsReducer;\n\nexport const getApplicationsWithFullDataSelector = state =>\n  state.applicationsReducer.map(application => ({\n    id: application.id,\n    client: getClientByIdSelector(state, application.clientId),\n    stocks: application.stockIds.map(stockId => getStockById(state, stockId))\n  }))\n\n// Export reducer\nexport const applicationsReducer = handleActions(\n  {\n    [getApplicationsSuccessAction]: (state, action) => action.payload.data,\n    [createApplicationSuccessAction]: (state, actions) => [\n      ...state,\n      actions.payload.data\n    ]\n  },\n  defaultState\n);\n\n\n\n// WEBPACK FOOTER //\n// ./src/redux/applications/index.js","// Import libraries\nimport { takeEvery, takeLatest } from \"redux-saga/effects\";\n\n// Import sagas and actions\nimport {\n  getStocksSaga,\n  getStocksAction,\n  createStockSaga,\n  createStockAction\n} from \"../stocks\";\n\nimport {\n  getClientsSaga,\n  getClientsAction,\n  createClientSaga,\n  createClientAction\n} from \"../clients\";\n\nimport {\n  getApplicationsSaga,\n  getApplicationsAction,\n  createApplicationSaga,\n  createApplicationAction\n} from \"../applications\";\n\nexport default function* rootSaga() {\n  // stocks\n  yield takeEvery(getStocksAction, getStocksSaga);\n  yield takeLatest(createStockAction, createStockSaga);\n\n  // clients\n  yield takeEvery(getClientsAction, getClientsSaga);\n  yield takeLatest(createClientAction, createClientSaga);\n\n  // applications\n  yield takeEvery(getApplicationsAction, getApplicationsSaga);\n  yield takeLatest(createApplicationAction, createApplicationSaga);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/redux/sagas/index.js","// Import libraries\nimport { createStore, applyMiddleware, combineReducers } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport logger from \"redux-logger\";\n\n// Import sagas\nimport rootSaga from \"../sagas/index\";\n\n// Import reducers\nimport { clientsReducer } from \"../clients\";\nimport { menuReducer } from \"../menu\";\nimport { stocksReducer } from \"../stocks\";\nimport { applicationsReducer } from \"../applications\";\nimport { citiesReducer } from \"../cities\";\n\nconst reducers = combineReducers({\n  menuReducer,\n  stocksReducer,\n  clientsReducer,\n  applicationsReducer,\n  citiesReducer\n});\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(\n  reducers,\n  composeWithDevTools(applyMiddleware(logger, sagaMiddleware))\n);\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n\n\n\n// WEBPACK FOOTER //\n// ./src/redux/store/index.js"],"sourceRoot":""}