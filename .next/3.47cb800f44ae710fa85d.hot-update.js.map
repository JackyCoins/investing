{"version":3,"sources":["webpack:///./src/redux/clients/index.js?7868"],"names":["getClientsSaga","createClientSaga","clients","call","api","getClientsFromServer","result","put","getClientsSuccessAction","action","createClient","payload","createClientSuccessAction","getClientsAction","createAction","createClientAction","values","newStock","getClientsSelector","state","clientsReducer","getClientById","foundedClient","find","handleActions","data","actions"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kGAUiBA,c;mGAMAC,gB;;AAhBjB;AACA;AACA;;AAEA;AACA;;AAEA,IAAMC,UAAU,EAAhB;;AAEA;AACO,SAAUF,cAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACgB,wEAAAG,CAAK,qDAAAC,CAAIF,OAAJ,CAAYG,oBAAjB,CADhB;;AAAA;AACCC,gBADD;AAAA;AAAA,iBAGC,uEAAAC,CAAIC,wBAAwBF,MAAxB,CAAJ,CAHD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAMA,SAAUL,gBAAV,CAA2BQ,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACgB,wEAAAN,CAAK,qDAAAC,CAAIF,OAAJ,CAAYQ,YAAjB,EAA+BD,OAAOE,OAAtC,CADhB;;AAAA;AACCL,gBADD;AAAA;AAAA,iBAGC,uEAAAC,CAAIK,0BAA0BN,MAA1B,CAAJ,CAHD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAMP;AACO,IAAMO,mBAAmB,2EAAAC,CAAa,aAAb,CAAzB;AACA,IAAMN,0BAA0B,2EAAAM,CAAa,qBAAb,EAAoC;AAAA,SAAUR,MAAV;AAAA,CAApC,CAAhC;;AAEA,IAAMS,qBAAqB,2EAAAD,CAAa,eAAb,EAA8B;AAAA,SAAUE,MAAV;AAAA,CAA9B,CAA3B;AACA,IAAMJ,4BAA4B,2EAAAE,CAAa,uBAAb,EAAsC;AAAA,SAAYG,QAAZ;AAAA,CAAtC,CAAlC;;AAEP;AACO,IAAMC,qBAAqB,SAArBA,kBAAqB;AAAA,SAASC,MAAMC,cAAf;AAAA,CAA3B;AACA,IAAMC,gBAAgB,SAAhBA,aAAgB,QAAS;AACpC,MAAMC,gBAAgBH,MAAMC,cAAN,CAAqBG,IAArB,EAAtB;AACD,CAFM;;AAIP;AACO,IAAMH,iBAAiB,4EAAAI,uDAC3BhB,uBAD2B,EACD,UAACW,KAAD,EAAQV,MAAR;AAAA,SAAmBA,OAAOE,OAAP,CAAec,IAAlC;AAAA,CADC,mCAE3Bb,yBAF2B,EAEC,UAACO,KAAD,EAAQO,OAAR;AAAA,sCAAyBP,KAAzB,IAAgCO,QAAQf,OAAR,CAAgBc,IAAhD;AAAA,CAFD,oBAG3BvB,OAH2B,CAAvB;;;;;;;;;;;;0BA7BDA,O;0BAGWF,c;0BAMAC,gB;0BAOJY,gB;0BACAL,uB;0BAEAO,kB;0BACAH,yB;0BAGAM,kB;0BACAG,a;0BAKAD,c","file":"3.47cb800f44ae710fa85d.hot-update.js","sourcesContent":["// Import libraries\nimport { handleActions, createAction } from \"redux-actions\";\nimport { call, put } from \"redux-saga/effects\";\n\n// Import api\nimport api from \"../../api\";\n\nconst clients = [];\n\n// Export sagas\nexport function* getClientsSaga() {\n  const result = yield call(api.clients.getClientsFromServer);\n\n  yield put(getClientsSuccessAction(result));\n}\n\nexport function* createClientSaga(action) {\n  const result = yield call(api.clients.createClient, action.payload);\n\n  yield put(createClientSuccessAction(result));\n}\n\n// Export actions\nexport const getClientsAction = createAction(\"GET_CLIENTS\");\nexport const getClientsSuccessAction = createAction(\"GET_CLIENTS_SUCCESS\", result => result);\n\nexport const createClientAction = createAction(\"CREATE_CLIENT\", values => values);\nexport const createClientSuccessAction = createAction(\"CREATE_CLIENT_SUCCESS\", newStock => newStock);\n\n// Export selectors\nexport const getClientsSelector = state => state.clientsReducer;\nexport const getClientById = state => {\n  const foundedClient = state.clientsReducer.find()\n}\n\n// Export reducer\nexport const clientsReducer = handleActions({\n  [getClientsSuccessAction]: (state, action) => action.payload.data,\n  [createClientSuccessAction]: (state, actions) => [ ...state, actions.payload.data ]\n}, clients);\n\n\n// WEBPACK FOOTER //\n// ./src/redux/clients/index.js"],"sourceRoot":""}