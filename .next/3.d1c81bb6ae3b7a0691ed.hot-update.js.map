{"version":3,"sources":["webpack:///./src/redux/applications/index.js?8731","webpack:///./src/redux/clients/index.js?7868","webpack:///./src/redux/stocks/index.js?3005"],"names":["getApplicationsSaga","createApplicationSaga","defaultState","call","api","applications","getApplicationsFromServer","result","put","getApplicationsSuccessAction","action","createApplication","payload","createApplicationSuccessAction","getApplicationsAction","createAction","createApplicationAction","values","newApplication","getApplicationsSelector","state","applicationsReducer","getApplicationsWithFullDataSelector","createSelector","handleActions","data","actions","getClientsSaga","createClientSaga","clients","getClientsFromServer","getClientsSuccessAction","createClient","createClientSuccessAction","getClientsAction","createClientAction","newStock","getClientsSelector","clientsReducer","getClientByIdSelector","id","find","client","getStocksSaga","createStockSaga","stocks","getStocksFromServer","getStocksSuccessAction","createStock","createStockSuccessAction","getStocksAction","createStockAction","getStocksSelector","stocksReducer","getStockById","stock"],"mappings":"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","file":"3.d1c81bb6ae3b7a0691ed.hot-update.js","sourcesContent":["// Import libraries\nimport { handleActions, createAction } from \"redux-actions\";\nimport { call, put } from \"redux-saga/effects\";\nimport { createSelector } from \"reselect\";\n\n// Import selectors\nimport { getStockById } from \"../stocks\";\nimport { getClientByIdSelector } from \"../clients\";\n\n// Import api\nimport api from \"../../api\";\n\nconst defaultState = [];\n\n// Export sagas\nexport function* getApplicationsSaga() {\n  const result = yield call(api.applications.getApplicationsFromServer);\n\n  yield put(getApplicationsSuccessAction(result));\n}\n\nexport function* createApplicationSaga(action) {\n  const result = yield call(api.applications.createApplication, action.payload);\n\n  yield put(createApplicationSuccessAction(result));\n}\n\n// Export actions\nexport const getApplicationsAction = createAction(\"GET_APPLICATIONS\");\nexport const getApplicationsSuccessAction = createAction(\"GET_APPLICATIONS_SUCCESS\", result => result);\n\nexport const createApplicationAction = createAction(\"CREATE_APPLICATION\", values => values);\nexport const createApplicationSuccessAction = createAction(\"CREATE_APPLICATION_SUCCESS\", newApplication => newApplication);\n\n// Export selectors\nexport const getApplicationsSelector = state => state.applicationsReducer;\n\nexport const getApplicationsWithFullDataSelector = state => createSelector(getApplicationsSelector(state), applications => {\n\n});\n\n// Export reducer\nexport const applicationsReducer = handleActions({\n  [getApplicationsSuccessAction]: (state, action) => action.payload.data,\n  [createApplicationSuccessAction]: (state, actions) => [ ...state, actions.payload.data ]\n}, defaultState);\n\n\n// WEBPACK FOOTER //\n// ./src/redux/applications/index.js","// Import libraries\nimport { handleActions, createAction } from \"redux-actions\";\nimport { call, put } from \"redux-saga/effects\";\n\n// Import api\nimport api from \"../../api\";\n\nconst clients = [];\n\n// Export sagas\nexport function* getClientsSaga() {\n  const result = yield call(api.clients.getClientsFromServer);\n\n  yield put(getClientsSuccessAction(result));\n}\n\nexport function* createClientSaga(action) {\n  const result = yield call(api.clients.createClient, action.payload);\n\n  yield put(createClientSuccessAction(result));\n}\n\n// Export actions\nexport const getClientsAction = createAction(\"GET_CLIENTS\");\nexport const getClientsSuccessAction = createAction(\"GET_CLIENTS_SUCCESS\", result => result);\n\nexport const createClientAction = createAction(\"CREATE_CLIENT\", values => values);\nexport const createClientSuccessAction = createAction(\"CREATE_CLIENT_SUCCESS\", newStock => newStock);\n\n// Export selectors\nexport const getClientsSelector = state => state.clientsReducer;\nexport const getClientByIdSelector = (state, id) => state.clientsReducer.find(client => client.id === id);\n\n// Export reducer\nexport const clientsReducer = handleActions({\n  [getClientsSuccessAction]: (state, action) => action.payload.data,\n  [createClientSuccessAction]: (state, actions) => [ ...state, actions.payload.data ]\n}, clients);\n\n\n// WEBPACK FOOTER //\n// ./src/redux/clients/index.js","// Import libraries\nimport { handleActions, createAction } from \"redux-actions\";\nimport { call, put } from \"redux-saga/effects\";\n\n// Import api\nimport api from \"../../api\";\n\nconst defaultState = [];\n\n// Export sagas\nexport function* getStocksSaga() {\n  const result = yield call(api.stocks.getStocksFromServer);\n\n  yield put(getStocksSuccessAction(result));\n}\n\nexport function* createStockSaga(action) {\n  const result = yield call(api.stocks.createStock, action.payload);\n\n  yield put(createStockSuccessAction(result));\n}\n\n// Export actions\nexport const getStocksAction = createAction(\"GET_STOCKS\");\nexport const getStocksSuccessAction = createAction(\"GET_STOCKS_SUCCESS\", result => result);\n\nexport const createStockAction = createAction(\"CREATE_STOCK\", values => values);\nexport const createStockSuccessAction = createAction(\"CREATE_STOCK_SUCCESS\", newStock => newStock);\n\n// Export selectors\nexport const getStocksSelector = state => state.stocksReducer;\nexport const getStockById = (state, id) => state.stocksReducer.find(stock => stock.id === id);\n\n// Export reducer\nexport const stocksReducer = handleActions({\n  [getStocksSuccessAction]: (state, action) => action.payload.data,\n  [createStockSuccessAction]: (state, actions) => [ ...state, actions.payload.data ]\n}, defaultState);\n\n\n// WEBPACK FOOTER //\n// ./src/redux/stocks/index.js"],"sourceRoot":""}