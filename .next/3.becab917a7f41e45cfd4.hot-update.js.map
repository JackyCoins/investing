{"version":3,"sources":["webpack:///./src/redux/applications/index.js?8731","webpack:///./src/redux/clients/index.js?7868","webpack:///./src/redux/sagas/index.js?a074","webpack:///./src/redux/store/index.js?ee0a"],"names":["getApplicationsSaga","createApplicationSaga","getAgreementSaga","defaultState","call","api","applications","getApplicationsFromServer","result","put","getApplicationsSuccessAction","action","createApplication","payload","createApplicationSuccessAction","createAgreement","link","document","createElement","setAttribute","backendPaths","assets","base","click","getApplicationsAction","createAction","createApplicationAction","values","newApplication","getAgreementAction","applicationId","getApplicationsSelector","state","applicationsReducer","getApplicationsWithFullDataSelector","map","id","application","client","getClientByIdSelector","clientId","stocks","stockIds","getStockById","stockId","handleActions","data","actions","getClientsSaga","createClientSaga","clients","getClientsFromServer","getClientsSuccessAction","createClient","createClientSuccessAction","getClientsAction","createClientAction","newStock","getClientsSelector","clientsReducer","getClientsWithCitiesSelector","createSelector","cities","city","find","title","rootSaga","takeEvery","takeLatest","reducers","combineReducers","menuReducer","stocksReducer","citiesReducer","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run"],"mappings":"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","file":"3.becab917a7f41e45cfd4.hot-update.js","sourcesContent":["// Import libraries\nimport { handleActions, createAction } from \"redux-actions\";\nimport { call, put } from \"redux-saga/effects\";\nimport { createSelector } from \"reselect\";\nimport FileSaver from \"file-saver\";\n\n// Import config\nimport { backendPaths } from \"../../config\";\n\n// Import selectors\nimport { getStockById } from \"../stocks\";\nimport { getClientByIdSelector } from \"../clients\";\n\n// Import api\nimport api from \"../../api\";\n\nconst defaultState = [];\n\n// Export sagas\nexport function* getApplicationsSaga() {\n  const result = yield call(api.applications.getApplicationsFromServer);\n\n  yield put(getApplicationsSuccessAction(result));\n}\n\nexport function* createApplicationSaga(action) {\n  const result = yield call(api.applications.createApplication, action.payload);\n\n  yield put(createApplicationSuccessAction(result));\n}\n\nexport function* getAgreementSaga(action) {\n  yield call(api.applications.createAgreement, action.payload);\n\n  const link = document.createElement(\"a\");\n  link.setAttribute(\"href\", `${backendPaths.assets.base}/agreement.docx`);\n  link.setAttribute(\"download\", \"download\");\n  link.click();\n}\n\n// Export actions\nexport const getApplicationsAction = createAction(\"GET_APPLICATIONS\");\nexport const getApplicationsSuccessAction = createAction(\n  \"GET_APPLICATIONS_SUCCESS\",\n  result => result\n);\n\nexport const createApplicationAction = createAction(\n  \"CREATE_APPLICATION\",\n  values => values\n);\nexport const createApplicationSuccessAction = createAction(\n  \"CREATE_APPLICATION_SUCCESS\",\n  newApplication => newApplication\n);\n\nexport const getAgreementAction = createAction(\n  \"GET_AGREEMENT\",\n  applicationId => applicationId\n);\n\n// Export selectors\nexport const getApplicationsSelector = state => state.applicationsReducer;\n\nexport const getApplicationsWithFullDataSelector = state =>\n  state.applicationsReducer.map(application => ({\n    id: application.id,\n    client: getClientByIdSelector(state, application.clientId),\n    stocks: application.stockIds.map(stockId => getStockById(state, stockId))\n  }));\n\n// Export reducer\nexport const applicationsReducer = handleActions(\n  {\n    [getApplicationsSuccessAction]: (state, action) => action.payload.data,\n    [createApplicationSuccessAction]: (state, actions) => [\n      ...state,\n      actions.payload.data\n    ]\n  },\n  defaultState\n);\n\n\n\n// WEBPACK FOOTER //\n// ./src/redux/applications/index.js","// Import libraries\nimport { handleActions, createAction } from \"redux-actions\";\nimport { createSelector } from \"reselect\";\nimport { call, put } from \"redux-saga/effects\";\n\n// Import api\nimport api from \"../../api\";\n\n// Import selectors and actions\nimport { getCitiesSelector } from \"../cities\";\n\nconst clients = [];\n\n// Export sagas\nexport function* getClientsSaga() {\n  const result = yield call(api.clients.getClientsFromServer);\n\n  yield put(getClientsSuccessAction(result));\n}\n\nexport function* createClientSaga(action) {\n  const result = yield call(api.clients.createClient, action.payload);\n\n  yield put(createClientSuccessAction(result));\n}\n\n// Export actions\nexport const getClientsAction = createAction(\"GET_CLIENTS\");\nexport const getClientsSuccessAction = createAction(\n  \"GET_CLIENTS_SUCCESS\",\n  result => result\n);\n\nexport const createClientAction = createAction(\n  \"CREATE_CLIENT\",\n  values => values\n);\nexport const createClientSuccessAction = createAction(\n  \"CREATE_CLIENT_SUCCESS\",\n  newStock => newStock\n);\n\n// Export selectors\nexport const getClientsSelector = state => state.clientsReducer;\n\nexport const getClientsWithCitiesSelector = createSelector(\n  getClientsSelector,\n  getCitiesSelector,\n  (clients, cities) =>\n    clients.map(client => {\n      const city = cities.find(city => client.city === city.id);\n\n      return ({\n        ...client,\n        city: {\n          id: client.city,\n          title: city ? city.title : \"\"\n        }\n      })\n    })\n);\n\nexport const getClientByIdSelector = (state, id) =>\n  state.clientsReducer.find(client => client.id === id);\n\n// Export reducer\nexport const clientsReducer = handleActions(\n  {\n    [getClientsSuccessAction]: (state, action) => action.payload.data,\n    [createClientSuccessAction]: (state, actions) => [\n      ...state,\n      actions.payload.data\n    ]\n  },\n  clients\n);\n\n\n\n// WEBPACK FOOTER //\n// ./src/redux/clients/index.js","// Import libraries\nimport { takeEvery, takeLatest } from \"redux-saga/effects\";\n\n// Import sagas and actions\nimport {\n  getStocksSaga,\n  getStocksAction,\n  createStockSaga,\n  createStockAction\n} from \"../stocks\";\n\nimport {\n  getClientsSaga,\n  getClientsAction,\n  createClientSaga,\n  createClientAction\n} from \"../clients\";\n\nimport {\n  getApplicationsSaga,\n  getApplicationsAction,\n  createApplicationSaga,\n  createApplicationAction,\n  getAgreementSaga,\n  getAgreementAction\n} from \"../applications\";\n\nexport default function* rootSaga() {\n  // stocks\n  yield takeEvery(getStocksAction, getStocksSaga);\n  yield takeLatest(createStockAction, createStockSaga);\n\n  // clients\n  yield takeEvery(getClientsAction, getClientsSaga);\n  yield takeLatest(createClientAction, createClientSaga);\n\n  // applications\n  yield takeEvery(getApplicationsAction, getApplicationsSaga);\n  yield takeLatest(createApplicationAction, createApplicationSaga);\n  yield takeEvery(getAgreementAction, getAgreementSaga);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/redux/sagas/index.js","// Import libraries\nimport { createStore, applyMiddleware, combineReducers } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport logger from \"redux-logger\";\n\n// Import sagas\nimport rootSaga from \"../sagas/index\";\n\n// Import reducers\nimport { clientsReducer } from \"../clients\";\nimport { menuReducer } from \"../menu\";\nimport { stocksReducer } from \"../stocks\";\nimport { applicationsReducer } from \"../applications\";\nimport { citiesReducer } from \"../cities\";\n\nconst reducers = combineReducers({\n  menuReducer,\n  stocksReducer,\n  clientsReducer,\n  applicationsReducer,\n  citiesReducer\n});\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(\n  reducers,\n  composeWithDevTools(applyMiddleware(logger, sagaMiddleware))\n);\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n\n\n\n// WEBPACK FOOTER //\n// ./src/redux/store/index.js"],"sourceRoot":""}