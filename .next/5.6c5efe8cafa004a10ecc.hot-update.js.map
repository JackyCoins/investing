{"version":3,"sources":["webpack:///./src/api/applications.js?9a7a","webpack:///./src/config.js?4264","webpack:///./src/redux/applications/index.js?8731","webpack:///./src/redux/sagas/index.js?a074","webpack:///./src/redux/store/index.js?ee0a"],"names":["getApplicationsFromServer","axios","get","backendPaths","applications","base","createApplication","post","values","api","module","exports","frontendPaths","stocks","clients","getApplicationsSaga","createApplicationSaga","defaultState","call","result","put","getApplicationsSuccessAction","action","payload","createApplicationSuccessAction","getApplicationsAction","createAction","createApplicationAction","newApplication","getApplicationsSelector","state","applicationsReducer","getApplicationsWithFullDataSelector","map","id","application","client","getClientByIdSelector","clientId","stockIds","getStockById","stockId","handleActions","data","actions","rootSaga","takeEvery","takeLatest","reducers","combineReducers","menuReducer","stocksReducer","clientsReducer","citiesReducer","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run"],"mappings":"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","file":"5.6c5efe8cafa004a10ecc.hot-update.js","sourcesContent":["// Import libraries\nimport axios from \"axios\";\n\n// Import config\nimport { backendPaths } from \"../config\";\n\nexport const getApplicationsFromServer = () => axios.get(backendPaths.applications.base);\n\nexport const createApplication = values => axios.post(backendPaths.applications.base, values);\n\n\n// WEBPACK FOOTER //\n// ./src/api/applications.js","const api = \"/api\";\n\nmodule.exports = {\n  frontendPaths: {\n\n  },\n  backendPaths: {\n    stocks: {\n      base: `${api}/stocks`\n    },\n    clients: {\n      base: `${api}/clients`\n    },\n    applications: {\n      base: `${api}/applications`\n    }\n  }\n};\n\n\n// WEBPACK FOOTER //\n// ./src/config.js","// Import libraries\nimport { handleActions, createAction } from \"redux-actions\";\nimport { call, put } from \"redux-saga/effects\";\nimport { createSelector } from \"reselect\";\n\n// Import selectors\nimport { getStockById } from \"../stocks\";\nimport { getClientByIdSelector } from \"../clients\";\n\n// Import api\nimport api from \"../../api\";\n\nconst defaultState = [];\n\n// Export sagas\nexport function* getApplicationsSaga() {\n  const result = yield call(api.applications.getApplicationsFromServer);\n\n  yield put(getApplicationsSuccessAction(result));\n}\n\nexport function* createApplicationSaga(action) {\n  const result = yield call(api.applications.createApplication, action.payload);\n\n  yield put(createApplicationSuccessAction(result));\n}\n\n// Export actions\nexport const getApplicationsAction = createAction(\"GET_APPLICATIONS\");\nexport const getApplicationsSuccessAction = createAction(\n  \"GET_APPLICATIONS_SUCCESS\",\n  result => result\n);\n\nexport const createApplicationAction = createAction(\n  \"CREATE_APPLICATION\",\n  values => values\n);\nexport const createApplicationSuccessAction = createAction(\n  \"CREATE_APPLICATION_SUCCESS\",\n  newApplication => newApplication\n);\n\n// Export selectors\nexport const getApplicationsSelector = state => state.applicationsReducer;\n\nexport const getApplicationsWithFullDataSelector = state =>\n  state.applicationsReducer.map(application => ({\n    id: application.id,\n    client: getClientByIdSelector(state, application.clientId),\n    stocks: application.stockIds.map(stockId => getStockById(state, stockId))\n  }))\n\n// Export reducer\nexport const applicationsReducer = handleActions(\n  {\n    [getApplicationsSuccessAction]: (state, action) => action.payload.data,\n    [createApplicationSuccessAction]: (state, actions) => [\n      ...state,\n      actions.payload.data\n    ]\n  },\n  defaultState\n);\n\n\n\n// WEBPACK FOOTER //\n// ./src/redux/applications/index.js","// Import libraries\nimport { takeEvery, takeLatest } from \"redux-saga/effects\";\n\n// Import sagas and actions\nimport {\n  getStocksSaga,\n  getStocksAction,\n  createStockSaga,\n  createStockAction\n} from \"../stocks\";\n\nimport {\n  getClientsSaga,\n  getClientsAction,\n  createClientSaga,\n  createClientAction\n} from \"../clients\";\n\nimport {\n  getApplicationsSaga,\n  getApplicationsAction,\n  createApplicationSaga,\n  createApplicationAction\n} from \"../applications\";\n\nexport default function* rootSaga() {\n  // stocks\n  yield takeEvery(getStocksAction, getStocksSaga);\n  yield takeLatest(createStockAction, createStockSaga);\n\n  // clients\n  yield takeEvery(getClientsAction, getClientsSaga);\n  yield takeLatest(createClientAction, createClientSaga);\n\n  // applications\n  yield takeEvery(getApplicationsAction, getApplicationsSaga);\n  yield takeLatest(createApplicationAction, createApplicationSaga);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/redux/sagas/index.js","// Import libraries\nimport { createStore, applyMiddleware, combineReducers } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport logger from \"redux-logger\";\n\n// Import sagas\nimport rootSaga from \"../sagas/index\";\n\n// Import reducers\nimport { clientsReducer } from \"../clients\";\nimport { menuReducer } from \"../menu\";\nimport { stocksReducer } from \"../stocks\";\nimport { applicationsReducer } from \"../applications\";\nimport { citiesReducer } from \"../cities\";\n\nconst reducers = combineReducers({\n  menuReducer,\n  stocksReducer,\n  clientsReducer,\n  applicationsReducer,\n  citiesReducer\n});\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(\n  reducers,\n  composeWithDevTools(applyMiddleware(logger, sagaMiddleware))\n);\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n\n\n\n// WEBPACK FOOTER //\n// ./src/redux/store/index.js"],"sourceRoot":""}